<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://shxiaj.github.io</id>
    <title>Gridea</title>
    <updated>2021-09-30T06:03:19.176Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://shxiaj.github.io"/>
    <link rel="self" href="https://shxiaj.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://shxiaj.github.io/images/avatar.png</logo>
    <icon>https://shxiaj.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[ChOx分析🤣🤣🤣🤣 ]]></title>
        <id>https://shxiaj.github.io/post/chox-fen-xi/</id>
        <link href="https://shxiaj.github.io/post/chox-fen-xi/">
        </link>
        <updated>2021-09-30T05:40:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="chox分析">ChOx分析🤣🤣🤣🤣</h2>
<h3 id="一-处理trr轨迹文件">一、处理trr轨迹文件</h3>
<p>防止蛋白质分子裂开，帧总数为1/3，提取最后一帧gro文件</p>
<pre><code class="language-bash"># -skip 间隔帧数输出
echo 0 | gmx trjconv -s md.tpr -f md.trr -o md.xtc -pbc mol -ur compact -skip 3
# 提取最后一帧，不带水分子
echo 20 | gmx trjconv -s md.tpr -f md.xtc -o md.gro -dump 300000
</code></pre>
<h3 id="二-xtc中导出dipoles">二、xtc中导出dipoles</h3>
<pre><code class="language-bash"># 建立索引，将蛋白质、FAD索引合并，否则分子不完整
echo -e &quot;1 | 13\nq\n&quot; | gmx make_ndx -f ../ions.gro
# gmx dipoles计算静电偶极、是物理意义上的
echo 28 | gmx dipoles -s *.tpr -f *.xtc -n
# 计算偶极与Z轴的夹角的余弦值，写入dipoles
awk '!/^(#|@)/ {theta = $4 / $5; print $1 &quot;     &quot; theta}' Mtot.xvg &gt; dipoles
</code></pre>
<h3 id="三-vmd画偶极">三、VMD画偶极</h3>
<h5 id="1-蛋白质分子质心坐标">1. 蛋白质分子质心坐标</h5>
<p>打开md.gro， 蛋白质居中（自定义命令pc）见附录</p>
<pre><code class="language-bash">## VMD获取质心坐标， mass_center_x     mass_center_y     mass_center_z
set mcid [atomselect 0 &quot;protein or resname FAD&quot;]
measure center $mcid weight mass
</code></pre>
<h5 id="2-直接用脚本画缩放目标可能需要调整文件名dipolessh">2. 直接用脚本画，缩放目标可能需要调整，文件名：dipoles.sh</h5>
<p>用法./dipoles.sh     mass_center_x     mass_center_y     mass_center_z<br>
脚本内容：附录</p>
<h5 id="3-vmd-中画偶极">3. VMD 中画偶极</h5>
<p>使用脚本输出的vmd命令直接画</p>
<pre><code>display resetview
rotate x by -90
rotate y by -90
source {E:\Notes\Script\VMD\color.tcl}
draw delete all
draw color purple
# 下面两条命令替换成脚本得到的
draw cylinder {41.048 34.253 47.490} {56.475 62.396 17.579} radius 0.5 filled yes resolution 20
draw cone {56.475 62.396 17.579} {58.058 65.282 14.511} radius 1.5 resolution 20
</code></pre>
<h5 id="4-vmd-保存图片">4. VMD 保存图片</h5>
<p>调整一下视角，背景白色，二级结构，设置好工作目录，渲染保存</p>
<pre><code>render Tachyon vmdscene.dat
tachyon_WIN32.exe vmdscene.dat -aasamples 24 -format BMP -o dipole.bmp -mediumshade -trans_vmd -res 2560 1440 -numthreads 4
</code></pre>
<p>tachyon_WIN32.exe我自己已经写到环境变量，可直接调用</p>
<h3 id="附vmd初始化脚本vmdrc">附vmd初始化脚本：vmd.rc</h3>
<pre><code>####################  My Settings  #################
display projection orthographic

proc bw {} {color Display Background white}
proc bb {} {color Display Background black}
proc bx {} {pbc box}

proc sam {} {
    display resetview
    rotate x by -90
    rotate y by -90


    mol delrep 0 0

    mol modcolor 0 0 Structure
    mol modstyle 0 0 NewCartoon 0.300000 10.000000 4.100000 0
    mol color Structure
    mol representation NewCartoon 0.300000 10.000000 4.100000 0
    mol selection not water
    mol material Opaque
    mol addrep 0

    mol modselect 1 0 {resname SAM SBM SEM SDM}
    mol color Name
    mol representation Lines 1.000000
    mol selection {resname SAM SBM SEM SDM}
    mol material Opaque
    mol addrep 0
}

proc pc {} {
  pbc wrap -center com -centersel &quot;protein&quot; -compound residue -all
}
</code></pre>
<h3 id="附script-dipolessh">附Script:  dipoles.sh</h3>
<pre><code class="language-bash"># Usage: 需要Mtot.xvg、 md.gro (都为最后一帧)
# Author: Ding
#########################################################

function fun1 {
  # 获取偶极xyz分量
  awk 'END {printf(&quot;%15.3f%15.3f%15.3f\n&quot;,$2,$3,$4)}' Mtot.xvg
}

function fun2 {
  # md.gro 最后一行的残基编号和原子总数
  awk 'BEGIN {FIELDWIDTHS=&quot;5 3 7 5&quot;} \
       {a=aa;b=bb;aa=$1;bb=$4;} END {print a &quot; &quot; b}' md.gro
}

function fun3 {
  # 缩放的坐标，质心、偶极、尖尖
  awk 'BEGIN {
       mx = &quot;'$mx'&quot; / 10 ; my = &quot;'${my}'&quot; / 10; mz = &quot;'${mz}'&quot; / 10;
       dx = &quot;'${dip[0]}'&quot;; dy = &quot;'${dip[1]}'&quot;; dz = &quot;'${dip[2]}'&quot;;
       s = 3; t = 8;
       for (i = 1; i &lt; 200; ++i) {
            dxi=dx/i; dyi=dy/i; dzi=dz/i;
            if (-s &lt; dxi &amp;&amp; dxi &lt; s &amp;&amp; -s &lt; dyi &amp;&amp; dyi &lt; s &amp;&amp; -s &lt; dzi &amp;&amp; dzi &lt; s) break;
       }
       x2=mx+dxi; y2=my+dyi; z2=mz+dzi;
       x3=mx+dx/(0.9*i); y3=my+dy/(0.9*i); z3=mz+dz/(0.9*i);
       printf(&quot;%8.3f%8.3f%8.3f\n&quot;,x2,y2,z2);
       printf(&quot;%8.3f%8.3f%8.3f\n&quot;,mx*10,my*10,mz*10);
       printf(&quot;%8.3f%8.3f%8.3f\n&quot;,x2*10,y2*10,z2*10);
       printf(&quot;%8.3f%8.3f%8.3f\n&quot;,x3*10,y3*10,z3*10);
       printf(&quot;%5d\n&quot;,i)
     }'
}

function fun4 {
  # 缩放后坐标写入md.gro，一个质心一个偶极箭头点
  # echo $1 $2 $3
  awk 'BEGIN {FIELDWIDTHS=&quot;5 3 7 5 8 8 8&quot;; 
       num = &quot;'${atom_num[1]}'&quot;;rid = &quot;'${atom_num[0]}'&quot;;
       x1 = &quot;'$mx'&quot; / 10 ; y1 = &quot;'${my}'&quot; / 10; z1 = &quot;'${mz}'&quot; / 10;
       x2 = &quot;'${f_dip[0]}'&quot;;y2 = &quot;'${f_dip[1]}'&quot;;z2 = &quot;'${f_dip[2]}'&quot;}
       {if (NR == 2) print $1+2; else print $0 ; if (NR == num + 2){
        printf(&quot;%5d%3s%7s%5d%8.3f%8.3f%8.3f\n&quot;, rid+1,&quot;LOG&quot;,&quot;CA&quot;,num+1,x1,y1,z1);
        printf(&quot;%5d%3s%7s%5d%8.3f%8.3f%8.3f\n&quot;, rid+1,&quot;LOG&quot;,&quot;CA&quot;,num+2,x2,y2,z2)
       }}' md.gro
}

function fun5 {
  # 计算静电偶级与Z轴的夹角Cos theta值
  awk '!/^(#|@)/ {theta = $4 / $5; print $0 &quot;     &quot; theta}' Mtot.xvg &gt; dipoles
}

#########################################################
       # printf(&quot;%8.3f%8.3f%8.3f\n&quot;,mx,my,mz);
       # printf(&quot;%8.3f%8.3f%8.3f\n&quot;,dx,dy,dz);
# fun4 
# echo ${atom_num[@]}
# echo ${f_dip[@]}

# atomselect 0 &quot;protein or resname FAD&quot;
# measure center atomselect0 weight mass
#########################################################

### mass center's coordinate (units A) ###
mx=$1; my=$2; mz=$3


### diploes_coordinate ###
dip=($(fun1))
echo -e &quot;\n偶极分量: ${dip[@]}&quot;


### atom_numbers ###
atom_num=($(fun2))
echo -e &quot;残基编号&amp;原子总数: ${atom_num[@]}&quot;


### log_atom_coordinate ###
f_dip=($(fun3))
echo -e &quot;蛋白质心坐标(A): ${f_dip[3]} ${f_dip[4]} ${f_dip[5]}&quot;
echo -e &quot;缩放偶极坐标(A): ${f_dip[6]} ${f_dip[7]} ${f_dip[8]}&quot;
echo -e &quot;偶极尖尖坐标(A): ${f_dip[9]} ${f_dip[10]} ${f_dip[11]}&quot;
echo -e &quot;缩放次数: ${f_dip[12]}&quot;
echo -e &quot;draw cylinder {${f_dip[3]} ${f_dip[4]} ${f_dip[5]}} {${f_dip[6]} ${f_dip[7]} ${f_dip[8]}} radius 0.5 filled yes resolution 20&quot;
echo -e &quot;draw cone {${f_dip[6]} ${f_dip[7]} ${f_dip[8]}} {${f_dip[9]} ${f_dip[10]} ${f_dip[11]}} radius 1.5 resolution 20&quot;

### write in gro ###
# fun4 &gt; md_dipoles.gro
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://shxiaj.github.io/post/hello-gridea/</id>
        <link href="https://shxiaj.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>